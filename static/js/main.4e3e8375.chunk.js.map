{"version":3,"sources":["Card.js","Card2.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","shuffle","sqB","sqI","sqN","sqG","sqO","balls","pickedBalls","lastChosen","i","length","push","array","splice","Math","floor","random","ranB","ranI","ranN","ranG","ranO","React","useState","cardNums","setCardNums","cardCreated","setCardCreated","allCardNums","setAllCardNums","allTrueOrFalse","setAllTrueOrFalse","useEffect","colorz","color","lastIndex","setLastIndex","allSquars","newArr","winConditions","setWinConditions","j","allTrue","currentValue","every","alert","console","log","Fragment","onClick","allB","allI","allN","allG","allO","trueOr","next","value","numB","numI","numN","numG","numO","forEach","e","map","number","class","Card2","App","letters","setPickedBalls","unpickedBalls","setUnpickedBalls","setLastChosen","listItems","className","prevArray","filter","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e3e8375.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nfunction Card(props){\r\n    let sqB=[]\r\n    \r\n    let sqI=[]\r\n    \r\n    let sqN=[]\r\n    \r\n    let sqG=[]\r\n    \r\n    let sqO=[]\r\n    \r\n    let balls = props.balls\r\n    let pickedBalls = props.pickedBalls\r\n    let lastChosen = props.lastChosen\r\n    // console.log(pickedBalls)\r\n    for(let i=1;i<balls.length+1;i++){\r\n        if(i>0&&i<=15){\r\n            sqB.push(balls[i-1])\r\n            \r\n          }else if(i>15&&i<=30){\r\n            sqI.push(balls[i-1])\r\n            \r\n          }else if(i>30&&i<=45){\r\n            sqN.push(balls[i-1])\r\n            \r\n          }else if(i>45&&i<=60){\r\n            sqG.push(balls[i-1])\r\n            \r\n          }else if(i>60&&i<=75){\r\n            sqO.push(balls[i-1])\r\n            \r\n          }\r\n    }\r\n   \r\n    function* shuffle(array) {\r\n\r\n        var i = array.length;\r\n    \r\n        while (i--) {\r\n            yield array.splice(Math.floor(Math.random() * (i+1)), 1)[0];\r\n        }\r\n    \r\n    }\r\n    var ranB  = shuffle(sqB);\r\n    var ranI  = shuffle(sqI);\r\n    var ranN  = shuffle(sqN);\r\n    var ranG  = shuffle(sqG);\r\n    var ranO  = shuffle(sqO);\r\n    const [cardNums,setCardNums]=React.useState()\r\n    const [cardCreated,setCardCreated]=React.useState(false)  \r\n    const [allCardNums,setAllCardNums]=React.useState()\r\n    const [allTrueOrFalse,setAllTrueOrFalse]=React.useState()\r\n    const generate =()=>{\r\n        let allB =[] \r\n        let allI=[]\r\n        let allN=[]\r\n        let allG=[]\r\n        let allO=[]\r\n        let allSquars =[]\r\n        let trueOr =[]\r\n        for(let i=1;i<25;i++){\r\n           trueOr.push(false)\r\n            if(i<6){\r\n                \r\n                allB.push(ranB.next().value)\r\n                // allSquars.push(ranB.next().value)\r\n                allI.push(ranI.next().value)\r\n                // allSquars.push(ranI.next().value)\r\n                allG.push(ranG.next().value)\r\n                // allSquars.push(ranG.next().value)\r\n                allO.push(ranO.next().value)\r\n                // allSquars.push(ranO.next().value)\r\n            }if(i<5){\r\n                allN.push(ranN.next().value)\r\n                // allSquars.push(ranN.next().value)\r\n            }\r\n            \r\n        }\r\n\r\n        allN.splice(2,0,\"FREE SPACE\")\r\n        setCardNums({...cardNums,numB:allB,numI:allI,numN:allN,numG:allG,numO:allO})\r\n       setCardCreated(true)\r\n       trueOr.push(false)\r\n       setAllTrueOrFalse(trueOr)\r\n       allB.forEach((e)=>{\r\n           allSquars.push(e)\r\n       })\r\n       allI.forEach((e)=>{\r\n        allSquars.push(e)\r\n    })\r\n    allN.forEach((e)=>{\r\n        allSquars.push(e)\r\n    })\r\n    allG.forEach((e)=>{\r\n        allSquars.push(e)\r\n    })\r\n    allO.forEach((e)=>{\r\n        allSquars.push(e)\r\n    })\r\n       setAllCardNums({...allCardNums,allSquars})\r\n    }  \r\n\r\n    useEffect(()=>{\r\n        \r\n    })\r\n    const [chosen,setChosen]=React.useState(false) \r\n    \r\n\r\n    const colorz =(color)=>{\r\n       for(let i=0;i<pickedBalls.length;i++){\r\n           if(pickedBalls[i]===color){\r\n               \r\n               return \"square\"\r\n           }\r\n       }\r\n       if(color===\"FREE SPACE\")\r\n       {return \"square\"}\r\n    }\r\n    const isAllTrue =(item)=>item===true\r\n    const test = [0,1,2,3,4]\r\n    \r\n    const [lastIndex,setLastIndex]=React.useState()\r\n   useEffect(()=>{\r\n      \r\n       if(cardCreated===true){\r\n           \r\n        for(let i=0;i<allCardNums.allSquars.length;i++){\r\n            if(lastChosen==allCardNums.allSquars[i]){\r\n                let newArr =[...allTrueOrFalse]\r\n                newArr[i]=true\r\n                newArr[12]=true\r\n                setAllTrueOrFalse(newArr)\r\n                setLastIndex(i)\r\n                \r\n            }\r\n        }\r\n\r\n   \r\n\r\n        \r\n       }\r\n    \r\n   },[lastChosen])\r\n\r\n   const [winConditions,setWinConditions] = React.useState([\r\n    // across\r\n   \r\n    [0,5,10,15,20],[1,6,11,16,21],[2,7,true,17,22],\r\n    [3,8,13,18,23],[4,9,14,19,24],\r\n    //down\r\n    [0,1,2,3,4],[5,6,7,8,9],[10,11,true,13,14],[15,16,17,18,19],\r\n    [20,21,22,23,24],\r\n    //diagnal\r\n    [0,6,true,18,24],[4,8,true,16,20]\r\n])\r\n   useEffect(()=>{\r\n    for(let i=0;i<winConditions.length;i++){\r\n        for(let j=0;j<winConditions[i].length;j++){\r\n            if(lastIndex===winConditions[i][j]){\r\n                let newArr = [...winConditions]\r\n                newArr[i].splice(j,1,true)\r\n                setWinConditions(newArr)\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n   },[allTrueOrFalse])\r\nuseEffect(()=>{\r\n    const allTrue = (currentValue) => currentValue ==true ;\r\nfor(let i=0;i<winConditions.length;i++){\r\n    if(winConditions[i].every(allTrue)===true){\r\n        alert(\"Card 1 wins!\")\r\n    }\r\n}\r\n},[winConditions])\r\nconsole.log(winConditions)\r\n//    if(allTrueOrFalse[j][k]==false){\r\n//     console.log(\"first\")\r\n//    break\r\n   \r\n// }else if(allTrueOrFalse[j][k]==true&&k==5){\r\n//     console.log(\"you win\")\r\n// }else{\r\n//     console.log('third')\r\n//     continue\r\n// }\r\n\r\n\r\n\r\n\r\nreturn(\r\n    <React.Fragment>\r\n    <div>\r\n    <button onClick={generate}>Genrate</button>\r\n   \r\n        <table>\r\n            <tr>\r\n                <th>B</th>\r\n                <th>I</th>\r\n                <th>N</th>\r\n                <th>G</th>\r\n                <th>O</th>\r\n            </tr>\r\n            <td>\r\n            {cardCreated?(  \r\n        cardNums.numB.map((number) =>\r\n        <tr><li class={colorz(number)} >{number}</li></tr>\r\n            )\r\n    ):null}\r\n    </td>\r\n    <td>\r\n      {cardCreated?(  \r\n        cardNums.numI.map((number) =>\r\n        <tr><li class={colorz(number)}>{number}</li></tr>\r\n            )\r\n    ):null}\r\n    </td>\r\n    <td>\r\n      {cardCreated?(  \r\n        cardNums.numN.map((number) =>\r\n        <tr><li class={colorz(number)}>{number}</li></tr>\r\n            )\r\n    ):null}\r\n    </td>\r\n    <td>\r\n      {cardCreated?(  \r\n        cardNums.numG.map((number) =>\r\n        <tr><li class={colorz(number)}>{number}</li></tr>\r\n            )\r\n    ):null}\r\n    </td>\r\n    <td>\r\n      {cardCreated?(  \r\n        cardNums.numO.map((number) =>\r\n        <tr><li class={colorz(number)}>{number}</li></tr>\r\n            )\r\n    ):null}\r\n    </td>\r\n        </table>\r\n    <h1>Card</h1>\r\n    </div>\r\n    \r\n    </React.Fragment>\r\n)\r\n}\r\nexport default Card","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nfunction Card2(props){\r\n    let sqB=[]\r\n    \r\n    let sqI=[]\r\n    \r\n    let sqN=[]\r\n    \r\n    let sqG=[]\r\n    \r\n    let sqO=[]\r\n    \r\n    let balls = props.balls\r\n    let pickedBalls = props.pickedBalls\r\n    let lastChosen = props.lastChosen\r\n    // console.log(pickedBalls)\r\n    for(let i=1;i<balls.length+1;i++){\r\n        if(i>0&&i<=15){\r\n            sqB.push(balls[i-1])\r\n            \r\n          }else if(i>15&&i<=30){\r\n            sqI.push(balls[i-1])\r\n            \r\n          }else if(i>30&&i<=45){\r\n            sqN.push(balls[i-1])\r\n            \r\n          }else if(i>45&&i<=60){\r\n            sqG.push(balls[i-1])\r\n            \r\n          }else if(i>60&&i<=75){\r\n            sqO.push(balls[i-1])\r\n            \r\n          }\r\n    }\r\n   \r\n    function* shuffle(array) {\r\n\r\n        var i = array.length;\r\n    \r\n        while (i--) {\r\n            yield array.splice(Math.floor(Math.random() * (i+1)), 1)[0];\r\n        }\r\n    \r\n    }\r\n    var ranB  = shuffle(sqB);\r\n    var ranI  = shuffle(sqI);\r\n    var ranN  = shuffle(sqN);\r\n    var ranG  = shuffle(sqG);\r\n    var ranO  = shuffle(sqO);\r\n    const [cardNums,setCardNums]=React.useState()\r\n    const [cardCreated,setCardCreated]=React.useState(false)  \r\n    const [allCardNums,setAllCardNums]=React.useState()\r\n    const [allTrueOrFalse,setAllTrueOrFalse]=React.useState()\r\n    const generate =()=>{\r\n        let allB =[] \r\n        let allI=[]\r\n        let allN=[]\r\n        let allG=[]\r\n        let allO=[]\r\n        let allSquars =[]\r\n        let trueOr =[]\r\n        for(let i=1;i<25;i++){\r\n           trueOr.push(false)\r\n            if(i<6){\r\n                \r\n                allB.push(ranB.next().value)\r\n                // allSquars.push(ranB.next().value)\r\n                allI.push(ranI.next().value)\r\n                // allSquars.push(ranI.next().value)\r\n                allG.push(ranG.next().value)\r\n                // allSquars.push(ranG.next().value)\r\n                allO.push(ranO.next().value)\r\n                // allSquars.push(ranO.next().value)\r\n            }if(i<5){\r\n                allN.push(ranN.next().value)\r\n                // allSquars.push(ranN.next().value)\r\n            }\r\n            \r\n        }\r\n\r\n        allN.splice(2,0,\"FREE SPACE\")\r\n        setCardNums({...cardNums,numB:allB,numI:allI,numN:allN,numG:allG,numO:allO})\r\n       setCardCreated(true)\r\n       trueOr.push(false)\r\n       setAllTrueOrFalse(trueOr)\r\n       allB.forEach((e)=>{\r\n           allSquars.push(e)\r\n       })\r\n       allI.forEach((e)=>{\r\n        allSquars.push(e)\r\n    })\r\n    allN.forEach((e)=>{\r\n        allSquars.push(e)\r\n    })\r\n    allG.forEach((e)=>{\r\n        allSquars.push(e)\r\n    })\r\n    allO.forEach((e)=>{\r\n        allSquars.push(e)\r\n    })\r\n       setAllCardNums({...allCardNums,allSquars})\r\n    }  \r\n    const [chosen,setChosen]=React.useState(false) \r\n    \r\n\r\n    const colorz =(color)=>{\r\n       for(let i=0;i<pickedBalls.length;i++){\r\n           if(pickedBalls[i]===color){\r\n               \r\n               return \"square\"\r\n           }\r\n       }\r\n       if(color===\"FREE SPACE\")\r\n       {return \"square\"}\r\n    }\r\n    const isAllTrue =(item)=>item===true\r\n    const test = [0,1,2,3,4]\r\n    \r\n    const [lastIndex,setLastIndex]=React.useState()\r\n   useEffect(()=>{\r\n      \r\n       if(cardCreated===true){\r\n           \r\n        for(let i=0;i<allCardNums.allSquars.length;i++){\r\n            if(lastChosen==allCardNums.allSquars[i]){\r\n                let newArr =[...allTrueOrFalse]\r\n                newArr[i]=true\r\n                newArr[12]=true\r\n                setAllTrueOrFalse(newArr)\r\n                setLastIndex(i)\r\n                \r\n            }\r\n        }\r\n\r\n        \r\n       }\r\n    \r\n   },[lastChosen])\r\n\r\n   const [winConditions,setWinConditions] = React.useState([\r\n    // across\r\n   \r\n    [0,5,10,15,20],[1,6,11,16,21],[2,7,true,17,22],\r\n    [3,8,13,18,23],[4,9,14,19,24],\r\n    //down\r\n    [0,1,2,3,4],[5,6,7,8,9],[10,11,true,13,14],[15,16,17,18,19],\r\n    [20,21,22,23,24],\r\n    //diagnal\r\n    [0,6,true,18,24],[4,8,true,16,20]\r\n])\r\n   useEffect(()=>{\r\n    for(let i=0;i<winConditions.length;i++){\r\n        for(let j=0;j<winConditions[i].length;j++){\r\n            if(lastIndex===winConditions[i][j]){\r\n                let newArr = [...winConditions]\r\n                newArr[i].splice(j,1,true)\r\n                setWinConditions(newArr)\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n   },[allTrueOrFalse])\r\nuseEffect(()=>{\r\n    const allTrue = (currentValue) => currentValue ==true ;\r\nfor(let i=0;i<winConditions.length;i++){\r\n    if(winConditions[i].every(allTrue)===true){\r\n        alert(\"Card 2 wins!\")\r\n    }\r\n}\r\n},[winConditions])\r\nconsole.log(winConditions)\r\n//    if(allTrueOrFalse[j][k]==false){\r\n//     console.log(\"first\")\r\n//    break\r\n   \r\n// }else if(allTrueOrFalse[j][k]==true&&k==5){\r\n//     console.log(\"you win\")\r\n// }else{\r\n//     console.log('third')\r\n//     continue\r\n// }\r\n\r\n\r\n\r\n\r\nreturn(\r\n    <React.Fragment>\r\n    <div>\r\n    <button onClick={generate}>Genrate</button>\r\n   \r\n        <table>\r\n            <tr>\r\n                <th>B</th>\r\n                <th>I</th>\r\n                <th>N</th>\r\n                <th>G</th>\r\n                <th>O</th>\r\n            </tr>\r\n            <td>\r\n            {cardCreated?(  \r\n        cardNums.numB.map((number) =>\r\n        <tr><li class={colorz(number)} >{number}</li></tr>\r\n            )\r\n    ):null}\r\n    </td>\r\n    <td>\r\n      {cardCreated?(  \r\n        cardNums.numI.map((number) =>\r\n        <tr><li class={colorz(number)}>{number}</li></tr>\r\n            )\r\n    ):null}\r\n    </td>\r\n    <td>\r\n      {cardCreated?(  \r\n        cardNums.numN.map((number) =>\r\n        <tr><li class={colorz(number)}>{number}</li></tr>\r\n            )\r\n    ):null}\r\n    </td>\r\n    <td>\r\n      {cardCreated?(  \r\n        cardNums.numG.map((number) =>\r\n        <tr><li class={colorz(number)}>{number}</li></tr>\r\n            )\r\n    ):null}\r\n    </td>\r\n    <td>\r\n      {cardCreated?(  \r\n        cardNums.numO.map((number) =>\r\n        <tr><li class={colorz(number)}>{number}</li></tr>\r\n            )\r\n    ):null}\r\n    </td>\r\n        </table>\r\n    <h1>Card</h1>\r\n    </div>\r\n    \r\n    </React.Fragment>\r\n)\r\n}\r\nexport default Card2","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Card from \"./Card\"\nimport Card2 from \"./Card2\"\n\nfunction App() {\nconst letters  = [\n  \"B\",\"I\",\"N\",\"G\",\"O\"\n]\nconst balls=[]\nfor(let i=1 ;i<76;i++){\n  if(i>0&&i<=15){\n    balls.push(letters[0]+i)\n  }else if(i>15&&i<=30){\n    balls.push(letters[1]+i)\n  }else if(i>30&&i<=45){\n    balls.push(letters[2]+i)\n  }else if(i>45&&i<=60){\n    balls.push(letters[3]+i)\n  }else if(i>60&&i<=75){\n    balls.push(letters[4]+i)\n  }\n}\n\nconst [pickedBalls,setPickedBalls]=React.useState([])\nconst [unpickedBalls,setUnpickedBalls]=React.useState(balls)\nconst [lastChosen,setLastChosen]=React.useState()\n\nconst generator =()=>{\n  \n const number= Math.floor((Math.random() * unpickedBalls.length) + 0);\n//  console.log(number)\n setPickedBalls(prevArray => [...prevArray, unpickedBalls[number]])\n setUnpickedBalls(prevArray=>prevArray.filter(item=>item!==unpickedBalls[number]))\n setLastChosen(unpickedBalls[number])\n}\n\nlet listItems = pickedBalls.map((number) =>\n<li>{number}</li>\n);\n\n\n\n  \n  return (\n    <React.Fragment>\n    <div className=\"App\">\n    Number called\n     <ul>{listItems}</ul>\n     </div>\n      \n     <button onClick={generator}>Get number</button>\n     <div className=\"Card\">\n     <Card balls={balls} pickedBalls={pickedBalls} lastChosen={lastChosen}/>\n     <Card2 balls={balls} pickedBalls={pickedBalls} lastChosen={lastChosen}/>\n     </div>\n  \n    \n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}