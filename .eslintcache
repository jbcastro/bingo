[{"C:\\users\\jbcas\\projects\\bingo\\src\\App.js":"1","C:\\users\\jbcas\\projects\\bingo\\src\\Card.js":"2","C:\\users\\jbcas\\projects\\bingo\\src\\reportWebVitals.js":"3","C:\\users\\jbcas\\projects\\bingo\\src\\index.js":"4","C:\\users\\jbcas\\projects\\bingo\\src\\Card2.js":"5"},{"size":1539,"mtime":1606686023904,"results":"6","hashOfConfig":"7"},{"size":6274,"mtime":1606686034080,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"7"},{"size":6226,"mtime":1606619531868,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"bgmdqt",{"filePath":"15","messages":"16","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},"C:\\users\\jbcas\\projects\\bingo\\src\\App.js",["25","26"],"import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Card from \"./Card\"\nimport Card2 from \"./Card2\"\n\nfunction App() {\nconst letters  = [\n  \"B\",\"I\",\"N\",\"G\",\"O\"\n]\nconst balls=[]\nfor(let i=1 ;i<76;i++){\n  if(i>0&&i<=15){\n    balls.push(letters[0]+i)\n  }else if(i>15&&i<=30){\n    balls.push(letters[1]+i)\n  }else if(i>30&&i<=45){\n    balls.push(letters[2]+i)\n  }else if(i>45&&i<=60){\n    balls.push(letters[3]+i)\n  }else if(i>60&&i<=75){\n    balls.push(letters[4]+i)\n  }\n}\n\nconst [pickedBalls,setPickedBalls]=React.useState([])\nconst [unpickedBalls,setUnpickedBalls]=React.useState(balls)\nconst [lastChosen,setLastChosen]=React.useState()\n\nconst generator =()=>{\n  \n const number= Math.floor((Math.random() * unpickedBalls.length) + 0);\n//  console.log(number)\n setPickedBalls(prevArray => [...prevArray, unpickedBalls[number]])\n setUnpickedBalls(prevArray=>prevArray.filter(item=>item!==unpickedBalls[number]))\n setLastChosen(unpickedBalls[number])\n}\n\nlet listItems = pickedBalls.map((number) =>\n<li>{number}</li>\n);\n\n\n\n  \n  return (\n    <React.Fragment>\n      <h1>Click generate to get cards before calling numbers</h1>\n    <div className=\"App\">\n    Number called\n     <ul>{listItems}</ul>\n     </div>\n      \n     <button onClick={generator}>Get number</button>\n     <div className=\"Card\">\n     <Card balls={balls} pickedBalls={pickedBalls} lastChosen={lastChosen}/>\n     <Card2 balls={balls} pickedBalls={pickedBalls} lastChosen={lastChosen}/>\n     </div>\n  \n    \n    </React.Fragment>\n  );\n}\n\nexport default App;\n","C:\\users\\jbcas\\projects\\bingo\\src\\Card.js",["27","28","29","30","31","32","33","34","35"],"C:\\users\\jbcas\\projects\\bingo\\src\\reportWebVitals.js",[],"C:\\users\\jbcas\\projects\\bingo\\src\\index.js",[],["36","37"],"C:\\users\\jbcas\\projects\\bingo\\src\\Card2.js",["38","39","40","41","42","43","44","45","46"],"import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nfunction Card2(props){\r\n    let sqB=[]\r\n    \r\n    let sqI=[]\r\n    \r\n    let sqN=[]\r\n    \r\n    let sqG=[]\r\n    \r\n    let sqO=[]\r\n    \r\n    let balls = props.balls\r\n    let pickedBalls = props.pickedBalls\r\n    let lastChosen = props.lastChosen\r\n    // console.log(pickedBalls)\r\n    for(let i=1;i<balls.length+1;i++){\r\n        if(i>0&&i<=15){\r\n            sqB.push(balls[i-1])\r\n            \r\n          }else if(i>15&&i<=30){\r\n            sqI.push(balls[i-1])\r\n            \r\n          }else if(i>30&&i<=45){\r\n            sqN.push(balls[i-1])\r\n            \r\n          }else if(i>45&&i<=60){\r\n            sqG.push(balls[i-1])\r\n            \r\n          }else if(i>60&&i<=75){\r\n            sqO.push(balls[i-1])\r\n            \r\n          }\r\n    }\r\n   \r\n    function* shuffle(array) {\r\n\r\n        var i = array.length;\r\n    \r\n        while (i--) {\r\n            yield array.splice(Math.floor(Math.random() * (i+1)), 1)[0];\r\n        }\r\n    \r\n    }\r\n    var ranB  = shuffle(sqB);\r\n    var ranI  = shuffle(sqI);\r\n    var ranN  = shuffle(sqN);\r\n    var ranG  = shuffle(sqG);\r\n    var ranO  = shuffle(sqO);\r\n    const [cardNums,setCardNums]=React.useState()\r\n    const [cardCreated,setCardCreated]=React.useState(false)  \r\n    const [allCardNums,setAllCardNums]=React.useState()\r\n    const [allTrueOrFalse,setAllTrueOrFalse]=React.useState()\r\n    const generate =()=>{\r\n        let allB =[] \r\n        let allI=[]\r\n        let allN=[]\r\n        let allG=[]\r\n        let allO=[]\r\n        let allSquars =[]\r\n        let trueOr =[]\r\n        for(let i=1;i<25;i++){\r\n           trueOr.push(false)\r\n            if(i<6){\r\n                \r\n                allB.push(ranB.next().value)\r\n                // allSquars.push(ranB.next().value)\r\n                allI.push(ranI.next().value)\r\n                // allSquars.push(ranI.next().value)\r\n                allG.push(ranG.next().value)\r\n                // allSquars.push(ranG.next().value)\r\n                allO.push(ranO.next().value)\r\n                // allSquars.push(ranO.next().value)\r\n            }if(i<5){\r\n                allN.push(ranN.next().value)\r\n                // allSquars.push(ranN.next().value)\r\n            }\r\n            \r\n        }\r\n\r\n        allN.splice(2,0,\"FREE SPACE\")\r\n        setCardNums({...cardNums,numB:allB,numI:allI,numN:allN,numG:allG,numO:allO})\r\n       setCardCreated(true)\r\n       trueOr.push(false)\r\n       setAllTrueOrFalse(trueOr)\r\n       allB.forEach((e)=>{\r\n           allSquars.push(e)\r\n       })\r\n       allI.forEach((e)=>{\r\n        allSquars.push(e)\r\n    })\r\n    allN.forEach((e)=>{\r\n        allSquars.push(e)\r\n    })\r\n    allG.forEach((e)=>{\r\n        allSquars.push(e)\r\n    })\r\n    allO.forEach((e)=>{\r\n        allSquars.push(e)\r\n    })\r\n       setAllCardNums({...allCardNums,allSquars})\r\n    }  \r\n    const [chosen,setChosen]=React.useState(false) \r\n    \r\n\r\n    const colorz =(color)=>{\r\n       for(let i=0;i<pickedBalls.length;i++){\r\n           if(pickedBalls[i]===color){\r\n               \r\n               return \"square\"\r\n           }\r\n       }\r\n       if(color===\"FREE SPACE\")\r\n       {return \"square\"}\r\n    }\r\n    const isAllTrue =(item)=>item===true\r\n    const test = [0,1,2,3,4]\r\n    \r\n    const [lastIndex,setLastIndex]=React.useState()\r\n   useEffect(()=>{\r\n      \r\n       if(cardCreated===true){\r\n           \r\n        for(let i=0;i<allCardNums.allSquars.length;i++){\r\n            if(lastChosen==allCardNums.allSquars[i]){\r\n                let newArr =[...allTrueOrFalse]\r\n                newArr[i]=true\r\n                newArr[12]=true\r\n                setAllTrueOrFalse(newArr)\r\n                setLastIndex(i)\r\n                \r\n            }\r\n        }\r\n\r\n        \r\n       }\r\n    \r\n   },[lastChosen])\r\n\r\n   const [winConditions,setWinConditions] = React.useState([\r\n    // across\r\n   \r\n    [0,5,10,15,20],[1,6,11,16,21],[2,7,true,17,22],\r\n    [3,8,13,18,23],[4,9,14,19,24],\r\n    //down\r\n    [0,1,2,3,4],[5,6,7,8,9],[10,11,true,13,14],[15,16,17,18,19],\r\n    [20,21,22,23,24],\r\n    //diagnal\r\n    [0,6,true,18,24],[4,8,true,16,20]\r\n])\r\n   useEffect(()=>{\r\n    for(let i=0;i<winConditions.length;i++){\r\n        for(let j=0;j<winConditions[i].length;j++){\r\n            if(lastIndex===winConditions[i][j]){\r\n                let newArr = [...winConditions]\r\n                newArr[i].splice(j,1,true)\r\n                setWinConditions(newArr)\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n   },[allTrueOrFalse])\r\nuseEffect(()=>{\r\n    const allTrue = (currentValue) => currentValue ==true ;\r\nfor(let i=0;i<winConditions.length;i++){\r\n    if(winConditions[i].every(allTrue)===true){\r\n        alert(\"Card 2 wins!\")\r\n    }\r\n}\r\n},[winConditions])\r\nconsole.log(winConditions)\r\n//    if(allTrueOrFalse[j][k]==false){\r\n//     console.log(\"first\")\r\n//    break\r\n   \r\n// }else if(allTrueOrFalse[j][k]==true&&k==5){\r\n//     console.log(\"you win\")\r\n// }else{\r\n//     console.log('third')\r\n//     continue\r\n// }\r\n\r\n\r\n\r\n\r\nreturn(\r\n    <React.Fragment>\r\n    <div>\r\n    <button onClick={generate}>Genrate</button>\r\n   \r\n        <table>\r\n            <tr>\r\n                <th>B</th>\r\n                <th>I</th>\r\n                <th>N</th>\r\n                <th>G</th>\r\n                <th>O</th>\r\n            </tr>\r\n            <td>\r\n            {cardCreated?(  \r\n        cardNums.numB.map((number) =>\r\n        <tr><li class={colorz(number)} >{number}</li></tr>\r\n            )\r\n    ):null}\r\n    </td>\r\n    <td>\r\n      {cardCreated?(  \r\n        cardNums.numI.map((number) =>\r\n        <tr><li class={colorz(number)}>{number}</li></tr>\r\n            )\r\n    ):null}\r\n    </td>\r\n    <td>\r\n      {cardCreated?(  \r\n        cardNums.numN.map((number) =>\r\n        <tr><li class={colorz(number)}>{number}</li></tr>\r\n            )\r\n    ):null}\r\n    </td>\r\n    <td>\r\n      {cardCreated?(  \r\n        cardNums.numG.map((number) =>\r\n        <tr><li class={colorz(number)}>{number}</li></tr>\r\n            )\r\n    ):null}\r\n    </td>\r\n    <td>\r\n      {cardCreated?(  \r\n        cardNums.numO.map((number) =>\r\n        <tr><li class={colorz(number)}>{number}</li></tr>\r\n            )\r\n    ):null}\r\n    </td>\r\n        </table>\r\n    <h1>Card</h1>\r\n    </div>\r\n    \r\n    </React.Fragment>\r\n)\r\n}\r\nexport default Card2",{"ruleId":"47","severity":1,"message":"48","line":2,"column":17,"nodeType":"49","messageId":"50","endLine":2,"endColumn":25},{"ruleId":"47","severity":1,"message":"51","line":2,"column":27,"nodeType":"49","messageId":"50","endLine":2,"endColumn":36},{"ruleId":"47","severity":1,"message":"48","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},{"ruleId":"47","severity":1,"message":"52","line":108,"column":12,"nodeType":"49","messageId":"50","endLine":108,"endColumn":18},{"ruleId":"47","severity":1,"message":"53","line":108,"column":19,"nodeType":"49","messageId":"50","endLine":108,"endColumn":28},{"ruleId":"47","severity":1,"message":"54","line":121,"column":11,"nodeType":"49","messageId":"50","endLine":121,"endColumn":20},{"ruleId":"47","severity":1,"message":"55","line":122,"column":11,"nodeType":"49","messageId":"50","endLine":122,"endColumn":15},{"ruleId":"56","severity":1,"message":"57","line":130,"column":26,"nodeType":"58","messageId":"59","endLine":130,"endColumn":28},{"ruleId":"60","severity":1,"message":"61","line":145,"column":6,"nodeType":"62","endLine":145,"endColumn":18,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"64","line":170,"column":6,"nodeType":"62","endLine":170,"endColumn":22,"suggestions":"65"},{"ruleId":"56","severity":1,"message":"57","line":172,"column":52,"nodeType":"58","messageId":"59","endLine":172,"endColumn":54},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},{"ruleId":"47","severity":1,"message":"52","line":104,"column":12,"nodeType":"49","messageId":"50","endLine":104,"endColumn":18},{"ruleId":"47","severity":1,"message":"53","line":104,"column":19,"nodeType":"49","messageId":"50","endLine":104,"endColumn":28},{"ruleId":"47","severity":1,"message":"54","line":117,"column":11,"nodeType":"49","messageId":"50","endLine":117,"endColumn":20},{"ruleId":"47","severity":1,"message":"55","line":118,"column":11,"nodeType":"49","messageId":"50","endLine":118,"endColumn":15},{"ruleId":"56","severity":1,"message":"57","line":126,"column":26,"nodeType":"58","messageId":"59","endLine":126,"endColumn":28},{"ruleId":"60","severity":1,"message":"61","line":139,"column":6,"nodeType":"62","endLine":139,"endColumn":18,"suggestions":"70"},{"ruleId":"60","severity":1,"message":"64","line":164,"column":6,"nodeType":"62","endLine":164,"endColumn":22,"suggestions":"71"},{"ruleId":"56","severity":1,"message":"57","line":166,"column":52,"nodeType":"58","messageId":"59","endLine":166,"endColumn":54},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'chosen' is assigned a value but never used.","'setChosen' is assigned a value but never used.","'isAllTrue' is assigned a value but never used.","'test' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allCardNums.allSquars', 'allTrueOrFalse', and 'cardCreated'. Either include them or remove the dependency array.","ArrayExpression",["72"],"React Hook useEffect has missing dependencies: 'lastIndex' and 'winConditions'. Either include them or remove the dependency array.",["73"],"no-native-reassign",["74"],"no-negated-in-lhs",["75"],["76"],["77"],{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"82"},{"desc":"80","fix":"83"},"Update the dependencies array to be: [allCardNums.allSquars, allTrueOrFalse, cardCreated, lastChosen]",{"range":"84","text":"85"},"Update the dependencies array to be: [allTrueOrFalse, lastIndex, winConditions]",{"range":"86","text":"87"},{"range":"88","text":"85"},{"range":"89","text":"87"},[3786,3798],"[allCardNums.allSquars, allTrueOrFalse, cardCreated, lastChosen]",[4495,4511],"[allTrueOrFalse, lastIndex, winConditions]",[3739,3751],[4448,4464]]